trigger:
  branches:
    include:
    - develop
    - feature/*
  paths:
    exclude:
    - doc/*

pool:
  vmImage: 'ubuntu-18.04'
  demands:
  - npm

variables:
  buildConfiguration: 'Release'
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  dotnetSdkVersion: '3.1.300'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
  inputs:
    version: '$(dotnetSdkVersion)'

- task: Npm@1
  displayName: 'Run npm install'
  inputs:
    verbose: false

- script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
  displayName: 'Compile Sass assets'

- task: gulp@1
  displayName: 'Run gulp tasks'

- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'Write build info'
  workingDirectory: $(wwwrootDir)

- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- template: templates/build.yml
  parameters:
    buildConfiguration: 'Debug'

- template: templates/build.yml
  parameters:
    buildConfiguration: 'Release'

# - task: PublishBuildArtifacts@1
#   displayName: 'Publish Artifact: drop'
#   condition: succeeded()

- task: JFrog.jfrog-artifactory-vsts-extension.artifactory-generic-upload.ArtifactoryGenericUpload@2
  displayName: 'Artifactory Generic Upload'
  inputs:
    artifactoryService: 'jfrog_artifacts'
    fileSpec: |
     {
       "files": [
         {
           "pattern": "*.zip",
           "target": "tcs-bt-dev-local"
         }
       ]
     }
    collectBuildInfo: true
    includeEnvVars: true


- task: JFrog.jfrog-artifactory-vsts-extension.artifactory-publish-build-info.ArtifactoryPublishBuildInfo@1
  displayName: 'Artifactory Publish Build Info'
  inputs:
    artifactoryService: 'jfrog_artifacts'

